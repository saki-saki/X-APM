import groovy.xml.XmlUtil

apply plugin: 'com.android.library'

afterEvaluate {
    generateReleaseBuildConfig.enabled = false
    generateDebugBuildConfig.enabled = false
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion as int
    // buildToolsVersion rootProject.ext.buildToolsVersion as String

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion as int
        targetSdkVersion rootProject.ext.compileSdkVersion as int
        versionCode rootProject.ext.versionCode as int
        versionName rootProject.ext.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    // Framework
    compileOnly files('../hidden-api/android-27.jar')
    compileOnly files('../hidden-api/services-27.jar')

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.supportAppCompat

    annotationProcessor 'org.projectlombok:lombok:1.16.16'
    compileOnly 'org.projectlombok:lombok:1.16.16'

    compileOnly 'de.robv.android.xposed:api:82'

    api 'com.google.guava:guava:20.0'
    api ("com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitVersion}")
            { exclude group: 'com.google.code.gson', module: 'gson' }
    api 'com.google.code.gson:gson:2.8.4'

    api 'com.github.Tornaco:AndroidCommon:v1.0'

    compileOnly project(':api-gen-annotations')
    annotationProcessor project(':api-gen-compiler')

    api project(':x-apm-base')
}

preBuild {
    doLast {
        def imlFile = file(project.name + ".iml")
        println 'Change ' + project.name + '.iml order'
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            //noinspection GroovyResultOfObjectAllocationIgnored
            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            // nop, iml not found
        }
    }
}
