import groovy.xml.XmlUtil

apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

afterEvaluate {
    generateReleaseBuildConfig.enabled = false
    generateDebugBuildConfig.enabled = false
}

android {

    compileSdkVersion rootProject.ext.compileSdkVersion as int
    buildToolsVersion rootProject.ext.buildToolsVersion as String

    defaultConfig {
        applicationId "github.tornaco.xposedmoduletest"
        minSdkVersion rootProject.ext.minSdkVersion as int
        targetSdkVersion rootProject.ext.compileSdkVersion as int
        versionCode  rootProject.ext.versionCode as int
        versionName  rootProject.ext.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("../building/keys/keys_android.jks")
            storePassword project.hasProperty("KEYSTORE_PASS") ? KEYSTORE_PASS : System.getenv("KEYSTORE_PASS")
            keyAlias project.hasProperty("ALIAS_NAME") ? ALIAS_NAME : System.getenv("ALIAS_NAME")
            keyPassword project.hasProperty("ALIAS_PASS") ? ALIAS_PASS : System.getenv("ALIAS_PASS")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // signingConfig signingConfigs.release
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

greendao {
    schemaVersion 1005
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Framework
    compileOnly files('../hidden-api/android-27.jar')
    compileOnly files('../hidden-api/services-27.jar')

    // Test start.
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    // Set this dependency to use JUnit 4 rules
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    // Set this dependency to build and run Espresso tests
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    // Set this dependency to build and run UI Automator tests
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    // Test end.

    implementation 'com.android.support:multidex:1.0.2'

    implementation rootProject.ext.supportAppCompat
    implementation rootProject.ext.supportCardView
    implementation rootProject.ext.supportDesign
    implementation rootProject.ext.supportPelette
    implementation rootProject.ext.supportRecyclerView
    implementation rootProject.ext.supportPreference


    implementation 'com.github.Tornaco:Logger:1.1.3'
    implementation 'com.github.Tornaco:CheckableImageView:1.0'

    compileOnly project(':api-gen-annotations')
    annotationProcessor project(':api-gen-compiler')

    compileOnly 'github.tornaco:permission-requester-annotation:1.3'
    annotationProcessor 'github.tornaco:permission-requester-compiler:1.3'

    annotationProcessor 'org.projectlombok:lombok:1.16.16'
    compileOnly 'org.projectlombok:lombok:1.16.16'

    testImplementation 'junit:junit:4.12'

    compileOnly 'de.robv.android.xposed:api:82'

    implementation "org.greenrobot:greendao:${rootProject.ext.greendaoVersion}"
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"

    implementation "io.reactivex:rxandroid:${rootProject.ext.rxAndroidVersion}"
    implementation "io.reactivex:rxjava:${rootProject.ext.rxJavaVersion}"

    implementation "com.squareup.retrofit2:adapter-rxjava:${rootProject.ext.retrofitVersion}"
    implementation "org.jsoup:jsoup:${rootProject.ext.jsoupVersion}"

    implementation project(':x-apm-framework')
    implementation project(':third-party:tiles')
    implementation project(':third-party:patternlockview')
    implementation project(':third-party:pinlockview')
    implementation project(':third-party:mdsearch')
    implementation project(':third-party:dateformatter')
    implementation project(':third-party:colorpicker')
    implementation project(':third-party:imagepicker')

    implementation files('libs/flyme_fingerprint.jar')

    // debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    // releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    implementation 'com.simplecityapps:recyclerview-fastscroll:1.0.16'

    implementation 'com.nononsenseapps:filepicker:4.1.0'

    implementation 'com.jaredrummler:android-shell:1.0.0'

    // Image loader.
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    // Crash report.
    // implementation 'com.tencent.bugly:crashreport:2.3.1'

    implementation 'com.vanniktech:emoji:0.5.1'

    // https://github.com/Flipboard/bottomsheet
    implementation 'com.flipboard:bottomsheet-core:1.5.3'
    implementation 'com.flipboard:bottomsheet-commons:1.5.3' // optional

    // https://github.com/thoughtbot/expandable-recycler-view
    implementation 'com.thoughtbot:expandablerecyclerview:1.3'

   // implementation 'com.google.firebase:firebase-core:11.8.0'
   // implementation "com.google.android.gms:play-services-gcm:11.8.0"

    // https://github.com/nekocode/Badge
    implementation 'com.github.nekocode:Badge:2.0'

    // https://github.com/PSDev/LicensesDialog
    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.3'

    // https://github.com/javiersantos/MaterialStyledDialogs
    implementation 'com.github.javiersantos:MaterialStyledDialogs:2.1'
}

// apply plugin: 'com.google.gms.google-services'

preBuild {
    doLast {
        def imlFile = file(project.name + ".iml")
        println 'Change ' + project.name + '.iml order'
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            //noinspection GroovyResultOfObjectAllocationIgnored
            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            // nop, iml not found
        }
    }
}
